#

# This is free software, lisence use MIT.

# 

# Copyright (C) 2019 P3TERX <https://p3terx.com>

# Copyright (C) 2020 KFERMercer <KFER.Mercer@gmail.com>

# 

# <https://github.com/KFERMercer/OpenWrt-CI>

#

name: OpenWrt-lede-64-x86

on:

  repository_dispatch:

  workflow_dispatch:

    inputs:

      ssh:

        description: 'SSH connection to Actions'

        required: false

        default: 'true/false'

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    

    steps:

      - name: Space cleanup

        env:

          DEBIAN_FRONTEND: noninteractive

        run: |

          docker rmi `docker images -q`

          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android

          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true

          sudo -E apt-get update 

          sudo -E apt-get -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev

          sudo -E apt-get -y autoremove --purge

          sudo -E apt-get clean

          df -h

          

      - name: Clone source code

        run: |

          # git clone https://github.com/Banwan1212/lede/

          git clone https://github.com/coolsnowwolf/lede

      - name: Update feeds

        run: |

          cd lede

         

          # 修改 wan6 dhcp接口eth0

          sed -i 's/br-$1/eth0/g' package/base-files/files/bin/config_generate

                    

          # 防火墙 开放 web管理

          sed -i 's/option rfc1918_filter 1/option rfc1918_filter 0/g' package/network/services/uhttpd/files/uhttpd.config

          sed -i 's/option input		REJECT/option input		ACCEPT/g' package/network/config/firewall/files/firewall.config          sed -i 's/option forward		REJECT/option forward		ACCEPT/g' package/network/config/firewall/files/firewall.config

          sed -i $'s/list   network		\'wan\'/list   network		\'lan\'/g' package/network/config/firewall/files/firewall.config

          sed -i $'s/list   network		\'wan6\'/list   network		\'lan6\'/g' package/network/config/firewall/files/firewall.config

          

          # 静态 to DHCP

          sed -i 's/-static/-dhcp/g' package/base-files/files/lib/functions/uci-defaults.sh

          sed -i 's/none/dhcp/g' package/base-files/files/bin/config_generate

          

          # 删除 配置

          sed -i '/set network.$1.ipaddr='$ipad'/d' package/base-files/files/bin/config_generate

          sed -i '/set network.$1.netmask='$netm'/d' package/base-files/files/bin/config_generate

          sed -i '/set network.$1.type='$type'/d' package/base-files/files/bin/config_generate         

          sed -i '/CYXluq4wUazHjmCDBCqXF/d' package/lean/default-settings/files/zzz-default-settings 

           

          # 插件 源地址

          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default

          sed -i 's/src-git luci/#src-git luci/g' ./feeds.conf.default

          

          cat >> feeds.conf.default <<EOF          

          src-git luci https://github.com/wandduse/luci

          src-git kenzo https://github.com/kenzok8/openwrt-packages

          src-git small https://github.com/kenzok8/small

          EOF

                    

          

          ./scripts/feeds update -a                              

          ./scripts/feeds install -a

          

      - name: Start SSH via tmate

        uses: rdp-studio/ssh2actions@main

        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')

        env:

          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}    

          
