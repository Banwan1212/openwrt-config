name: Build OpenWrt 23.05.2 ai

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 2 * * *'  # 每天凌晨2点自动编译

env:
  OPENWRT_REPO: 'openwrt/openwrt' # OpenWrt源码仓库
  OPENWRT_BRANCH: 'openwrt-23.05' # OpenWrt版本分支
  FEEDS_CONF: 'feeds.conf.default' # feeds配置文件
  CONFIG_FILE: '.config' # 编译配置文件

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: ${{ env.OPENWRT_REPO }}
        ref: ${{ env.OPENWRT_BRANCH }}
             
    - name: Set up environment
      run: |
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
        sudo -E apt-get update 
        sudo -E apt-get -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        df -h
    - name: Install feeds
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a -p packages

    - name: Load custom configuration
      run: |
        cp ${{ github.workspace }}/${{ env.CONFIG_FILE }} .config

    - name: Cache build directories
      uses: actions/cache@v2
      with:
        path: |
          bin
          build_dir
          staging_dir
        key: ${{ runner.os }}-openwrt-${{ hashFiles('**/${{ env.CONFIG_FILE }}') }}
        restore-keys: |
          ${{ runner.os }}-openwrt-

    - name: Compile OpenWrt
      run: |
        make defconfig
        make -j$(nproc)
